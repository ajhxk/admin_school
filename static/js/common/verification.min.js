/**
 * Created by luyanliang on 2015/12/29.
 */
var verification = {

    empty: function (v) {
        if (!v)
            return false;
        v = verification.trim(v);
        return v.length > 0;
    },
    numer: function (_v) {
        if (!_v) return false;
        var _regExp = /^-(\d*\.)?\d|(\d*\.)?\d+$/;
        return _regExp.test(_v.trim());
    },
    price: function (_v) {
        if (!_v) return false;
        var _regExp = /\d{1,5}(\.\d{1,2})?$/;
        return _regExp.test(_v);
    },
    positiveNumber: function (_v) {
        if (!_v) return false;
        var _regExp = /^([0-9]*\.)?\d+$/;
        return _regExp.test(_v.trim());
    },
    positiveInteger: function (_v) {
        if (!_v) return false;
        var _regExp = /^[0-9]*[1-9][0-9]*$/;
        return _regExp.test(_v.trim());
    },
    nonNegative: function (_v) {
        if (!_v) return false;
        var _regExp = /^[0-9]*([1-9]*\.)?\d+$/;
        return _regExp.test(_v.trim());
    },
    chars: function (_v) {
        if (!_v) return false;
        var _regExp = /^[a-z,A-Z]+$/;
        return _regExp.test(_v);
    },
    checkPhone: function (phone) {
        if (!phone) {
            return false;
        }
        var _regExp = /^1[3|4|5|7|8]\d{9}$/;
        return _regExp.test(phone);
    },
    checkPhone86: function (phone) {
        if (!phone) {
            return false;
        }
        var _regExp = /^((\+86)|(86))?1[3|4|5|8]\d{9}$/;
        return _regExp.test(phone);
    },
    url: function (url) {
        //url
        var _regExp = /(http|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?/;
        return _regExp.test(url);
    },
    email: function (_v) {
        if (!_v) return false;
        //email
        var _regExp = /^([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+\.[a-zA-Z]{2,3}$/;
        return _regExp.test(_v);
    },
    max: function (obj, key) {
        var _v = obj.length;
        return _v - 0 <= key - 0;
    },
    min: function (obj, key) {
        var _v = obj.length;
        return _v.length >= key;
    },
    zone: function (str) {
        if (!str) {
            return false;
        }
        var _regZone = /(0[0-9]{2,3})/;
        return _regZone.test(str);
    },
    fixedPhone: function (str) {
        if (!str) {
            return false;
        }
        var _reg = /\d{7,8}/;
        return _reg.test(str);
    },
    id: function (str) {
        if (!str) {
            return false;
        }
        var reg = /^(\d{15}$|^\d{18}$|^\d{17}(\d|X|x))$/;
        return reg.test(str);
    },
    trim: function (str) {
        return str.replace(/^(\s|\u00A0)+/, '').replace(/(\s|\u00A0)+$/, '');
    },
    compare: function (startTime, endTime) {
        var startTime = Date.parse(startTime.replace(/-/g, "/"));
        var endTime = Date.parse(endTime.replace(/-/g, "/"));
        return endTime > startTime;
    }
};